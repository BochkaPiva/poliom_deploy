#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
from pathlib import Path
import psycopg2

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
current_dir = Path(__file__).parent
services_dir = current_dir.parent
sys.path.insert(0, str(services_dir))

from dotenv import load_dotenv
load_dotenv('.env.local')

def check_documents_table():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã documents"""
    try:
        conn = psycopg2.connect(os.getenv('DATABASE_URL'))
        cur = conn.cursor()
        
        print("üìã –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ DOCUMENTS:")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cur.execute("""
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'documents' 
            ORDER BY ordinal_position;
        """)
        
        columns = cur.fetchall()
        for col in columns:
            nullable = "NULL" if col[2] == "YES" else "NOT NULL"
            default = f" DEFAULT {col[3]}" if col[3] else ""
            print(f"  {col[0]}: {col[1]} {nullable}{default}")
        
        print("\nüìä –î–ê–ù–ù–´–ï –í –¢–ê–ë–õ–ò–¶–ï DOCUMENTS:")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        cur.execute("SELECT id, filename, uploaded_by, processing_status FROM documents ORDER BY id;")
        docs = cur.fetchall()
        
        for doc in docs:
            print(f"  ID: {doc[0]}, –§–∞–π–ª: {doc[1]}, –ó–∞–≥—Ä—É–∂–µ–Ω: {doc[2]}, –°—Ç–∞—Ç—É—Å: {doc[3]}")
        
        print("\nüë• –¢–ê–ë–õ–ò–¶–ê ADMINS:")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        cur.execute("SELECT id, username, full_name FROM admins ORDER BY id;")
        admins = cur.fetchall()
        
        for admin in admins:
            print(f"  ID: {admin[0]}, Username: {admin[1]}, –§–ò–û: {admin[2]}")
        
        cur.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_documents_table() 