# PowerShell —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ü–û–õ–ò–û–ú –Ω–∞ Windows Server

param(
    [string]$Domain = "localhost",
    [string]$InstallPath = "C:\poliom"
)

Write-Host "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ü–û–õ–ò–û–ú –Ω–∞ Windows Server..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Desktop
try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è Windows" -ForegroundColor Red
    Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å: https://www.docker.com/products/docker-desktop" -ForegroundColor Yellow
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." -ForegroundColor Yellow
$directories = @(
    "$InstallPath\logs",
    "$InstallPath\uploads", 
    "$InstallPath\backups",
    "$InstallPath\nginx\ssl"
)

foreach ($dir in $directories) {
    if (!(Test-Path $dir)) {
        New-Item -ItemType Directory -Path $dir -Force | Out-Null
        Write-Host "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir" -ForegroundColor Gray
    }
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Yellow
if (Test-Path $InstallPath) {
    Copy-Item -Path ".\*" -Destination $InstallPath -Recurse -Force
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
$envFile = "$InstallPath\.env"
if (!(Test-Path $envFile)) {
    Copy-Item -Path "$InstallPath\.env.production" -Destination $envFile
    Write-Host "‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª $envFile" -ForegroundColor Yellow
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
Write-Host "üîí –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..." -ForegroundColor Yellow
$certPath = "$InstallPath\nginx\ssl"
if (!(Test-Path "$certPath\privkey.pem")) {
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    $cert = New-SelfSignedCertificate -DnsName $Domain -CertStoreLocation "cert:\LocalMachine\My"
    $certPassword = ConvertTo-SecureString -String "poliom123" -Force -AsPlainText
    
    # –≠–∫—Å–ø–æ—Ä—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    Export-PfxCertificate -Cert $cert -FilePath "$certPath\certificate.pfx" -Password $certPassword | Out-Null
    
    Write-Host "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
    Write-Host "‚ö†Ô∏è –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—Å—Ç–æ—è—â–∏–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç" -ForegroundColor Yellow
}

# –°–æ–∑–¥–∞–Ω–∏–µ Windows Service
Write-Host "üîß –°–æ–∑–¥–∞–Ω–∏–µ Windows Service..." -ForegroundColor Yellow
$serviceName = "PoliomSystem"
$serviceDisplayName = "POLIOM Corporate Bot System"
$serviceDescription = "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —á–∞—Ç-–±–æ—Ç–∞ –ü–û–õ–ò–û–ú"

# –°–æ–∑–¥–∞–Ω–∏–µ batch —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
$startScript = @"
@echo off
cd /d $InstallPath
docker-compose -f docker-compose.prod.yml up -d
"@

$stopScript = @"
@echo off
cd /d $InstallPath
docker-compose -f docker-compose.prod.yml down
"@

$startScript | Out-File -FilePath "$InstallPath\start.bat" -Encoding ASCII
$stopScript | Out-File -FilePath "$InstallPath\stop.bat" -Encoding ASCII

# –°–æ–∑–¥–∞–Ω–∏–µ PowerShell —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–º
$serviceScript = @"
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º –ü–û–õ–ò–û–ú
param([string]`$Action)

switch (`$Action) {
    "start" {
        Set-Location "$InstallPath"
        docker-compose -f docker-compose.prod.yml up -d
    }
    "stop" {
        Set-Location "$InstallPath"
        docker-compose -f docker-compose.prod.yml down
    }
    "restart" {
        Set-Location "$InstallPath"
        docker-compose -f docker-compose.prod.yml down
        docker-compose -f docker-compose.prod.yml up -d
    }
    "status" {
        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    }
    default {
        Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\manage.ps1 [start|stop|restart|status]"
    }
}
"@

$serviceScript | Out-File -FilePath "$InstallPath\manage.ps1" -Encoding UTF8

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
Write-Host "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
$backupScript = @"
# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ü–û–õ–ò–û–ú
`$BackupDir = "$InstallPath\backups"
`$Date = Get-Date -Format "yyyyMMdd_HHmmss"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Write-Host "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker exec poliom_postgres pg_dump -U poliom_user poliom_production > "`$BackupDir\db_backup_`$Date.sql"

# –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Host "–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
Compress-Archive -Path "$InstallPath\uploads\*" -DestinationPath "`$BackupDir\uploads_backup_`$Date.zip" -Force

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
Write-Host "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
Get-ChildItem "`$BackupDir\*.sql" | Where-Object {`$_.LastWriteTime -lt (Get-Date).AddDays(-30)} | Remove-Item
Get-ChildItem "`$BackupDir\*.zip" | Where-Object {`$_.LastWriteTime -lt (Get-Date).AddDays(-30)} | Remove-Item

Write-Host "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: `$Date" -ForegroundColor Green
"@

$backupScript | Out-File -FilePath "$InstallPath\backup.ps1" -Encoding UTF8

# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
Write-Host "‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
$taskName = "PoliomBackup"
$taskAction = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-File `"$InstallPath\backup.ps1`""
$taskTrigger = New-ScheduledTaskTrigger -Daily -At "02:00"
$taskSettings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries -StartWhenAvailable

try {
    Register-ScheduledTask -TaskName $taskName -Action $taskAction -Trigger $taskTrigger -Settings $taskSettings -Force | Out-Null
    Write-Host "‚úÖ –ó–∞–¥–∞—á–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: $($_.Exception.Message)" -ForegroundColor Yellow
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Firewall
Write-Host "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Firewall..." -ForegroundColor Yellow
try {
    New-NetFirewallRule -DisplayName "POLIOM HTTP" -Direction Inbound -Protocol TCP -LocalPort 80 -Action Allow | Out-Null
    New-NetFirewallRule -DisplayName "POLIOM HTTPS" -Direction Inbound -Protocol TCP -LocalPort 443 -Action Allow | Out-Null
    Write-Host "‚úÖ –ü—Ä–∞–≤–∏–ª–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ —Å–æ–∑–¥–∞–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∞–π—Ä–≤–æ–ª: $($_.Exception.Message)" -ForegroundColor Yellow
}

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
Write-Host "üéØ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor Yellow
Set-Location $InstallPath
try {
    & docker-compose -f docker-compose.prod.yml up -d
    Write-Host "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Write-Host "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
Write-Host "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª $InstallPath\.env"
Write-Host "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ $InstallPath\nginx\ssl\"
Write-Host "3. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–º–µ–Ω –≤ $InstallPath\nginx\nginx.conf"
Write-Host "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: .\manage.ps1 restart"
Write-Host ""
Write-Host "üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: https://$Domain" -ForegroundColor Cyan
Write-Host "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: .\manage.ps1 [start|stop|restart|status]" -ForegroundColor Cyan
Write-Host "üíæ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ: .\backup.ps1" -ForegroundColor Cyan 